<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Simple Calculator Library Invalid Case Test" duration-ms="42" started-at="2016-12-11T17:17:05Z" finished-at="2016-12-11T17:17:05Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="42" started-at="2016-12-11T17:17:05Z" finished-at="2016-12-11T17:17:05Z">
      <class name="testingforstaticAPIs.InvalidTests">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testingforstaticAPIs.InvalidTests@7946e1f4]" name="beforeMethod" is-config="true" duration-ms="4" started-at="2016-12-12T00:17:05Z" finished-at="2016-12-12T00:17:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="aboveUpperLimit()[pri:0, instance:testingforstaticAPIs.InvalidTests@7946e1f4]" name="aboveUpperLimit" duration-ms="4" started-at="2016-12-12T00:17:05Z" finished-at="2016-12-12T00:17:05Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method InvalidTests.aboveUpperLimit()[pri:0, instance:testingforstaticAPIs.InvalidTests@7946e1f4] should have thrown an exception of type class java.lang.Exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method InvalidTests.aboveUpperLimit()[pri:0, instance:testingforstaticAPIs.InvalidTests@7946e1f4] should have thrown an exception of type class java.lang.Exception
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1344)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1129)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:746)
	at org.testng.TestRunner.run(TestRunner.java:600)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1264)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1189)
	at org.testng.TestNG.runSuites(TestNG.java:1104)
	at org.testng.TestNG.run(TestNG.java:1076)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aboveUpperLimit -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testingforstaticAPIs.InvalidTests@7946e1f4]" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-12-12T00:17:05Z" finished-at="2016-12-12T00:17:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testingforstaticAPIs.InvalidTests@7946e1f4]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-12-12T00:17:05Z" finished-at="2016-12-12T00:17:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="belowLowerLimit()[pri:0, instance:testingforstaticAPIs.InvalidTests@7946e1f4]" name="belowLowerLimit" duration-ms="2" started-at="2016-12-12T00:17:05Z" finished-at="2016-12-12T00:17:05Z">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method InvalidTests.belowLowerLimit()[pri:0, instance:testingforstaticAPIs.InvalidTests@7946e1f4] should have thrown an exception of type class java.lang.Exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method InvalidTests.belowLowerLimit()[pri:0, instance:testingforstaticAPIs.InvalidTests@7946e1f4] should have thrown an exception of type class java.lang.Exception
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1344)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:684)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1129)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:746)
	at org.testng.TestRunner.run(TestRunner.java:600)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1264)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1189)
	at org.testng.TestNG.runSuites(TestNG.java:1104)
	at org.testng.TestNG.run(TestNG.java:1076)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- belowLowerLimit -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testingforstaticAPIs.InvalidTests@7946e1f4]" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-12-12T00:17:05Z" finished-at="2016-12-12T00:17:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testingforstaticAPIs.InvalidTests@7946e1f4]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-12-12T00:17:05Z" finished-at="2016-12-12T00:17:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="divideByZero()[pri:0, instance:testingforstaticAPIs.InvalidTests@7946e1f4]" name="divideByZero" duration-ms="2" started-at="2016-12-12T00:17:05Z" finished-at="2016-12-12T00:17:05Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at SimpleCalc.SimpleCalc.doDivide(SimpleCalc.java:110)
	at testingforstaticAPIs.InvalidTests.divideByZero(InvalidTests.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1129)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:746)
	at org.testng.TestRunner.run(TestRunner.java:600)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1264)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1189)
	at org.testng.TestNG.runSuites(TestNG.java:1104)
	at org.testng.TestNG.run(TestNG.java:1076)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divideByZero -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testingforstaticAPIs.InvalidTests@7946e1f4]" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-12-12T00:17:05Z" finished-at="2016-12-12T00:17:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testingforstaticAPIs.InvalidTests -->
    </test> <!-- Test -->
  </suite> <!-- Simple Calculator Library Invalid Case Test -->
</testng-results>
